#pragma once
#include "head.h"
namespace api_emu {
	extern bool api_simulation_router(uc_engine* uc, std::string name, std::string moudle_name, uint64_t function_address, uint64_t call_address, sim_process* context);
	extern void HeapAlloc(ULONG AllocBytes, bool IsPageAlign);
	extern void LocalAlloc(uc_engine* uc, uint64_t address, sim_process* context);
	extern void exit(uc_engine* uc, uint64_t address, sim_process* context);
	extern void GetSystemTimeAsFileTime(uc_engine* uc, uint64_t address, sim_process* context);
	extern void GetCurrentThreadId(uc_engine* uc, uint64_t address, sim_process* context);
	extern void GetCurrentProcessId(uc_engine* uc, uint64_t address, sim_process* context);
	void GetModuleHandleA(uc_engine* uc, uint64_t address, sim_process* context);
	extern void GetModuleHandleW(uc_engine* uc, uint64_t address, sim_process* context);
	extern void FakeQueryPerformanceCounter(uc_engine* uc, uint64_t address, sim_process* context);
};