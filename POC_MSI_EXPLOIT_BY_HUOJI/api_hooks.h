#pragma once
#include "head.h"
namespace call_track {
	extern void print_string_hex(unsigned char* str, size_t len);
	extern void handle_code_run(uc_engine* uc, uint64_t address, uint32_t size, void* user_data);
	extern void handle_memory_read(uc_engine* uc, uc_mem_type type, uint64_t address, int size, int64_t value, void* user_data);
	extern void hanlde_unmap_mem(uc_engine* uc, uc_mem_type type, uint64_t address, int size, int64_t value, void* user_data);
	extern void handle_memory_unmap_read(uc_engine* uc, uc_mem_type type, uint64_t address, int size, int64_t value, void* user_data);
	bool find_code_speace(std::vector<struct_moudle> params_moudle_list, uint64_t params_rip, struct_moudle* out_info);
	void print_export_function(struct_moudle params_moudle_list, sim_process* params_simprocess, uint64_t params_rip);
	extern uint64_t LastMoudleBase;
};