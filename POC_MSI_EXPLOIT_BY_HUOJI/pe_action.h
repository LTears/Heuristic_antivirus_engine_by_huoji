#pragma once
#include "head.h"
class pe_action
{
public:
	
	RtlImageDirectoryEntryToDataFn RtlImageDirectoryEntryToData;
	std::vector<moudle_import> get_import(PVOID params_image_base, sim_process process_context);
	std::vector<struct_moudle> map_pe_import(std::vector<struct_moudle> params_moudle_list, DWORD64 params_moudle_base, sim_process process_context);
	void relocation(sim_process process);
	std::vector<moudle_export> get_export(PVOID params_image_base);
	int load_pe(std::string parms_file_path, sim_process params_config);
	std::vector<struct_moudle> push_to_virtual_helper(std::vector<struct_moudle> params_moudle_list, std::vector<moudle_export> params_export, std::vector<moudle_import> params_import, char* params_dll_name, uint64_t params_moudle_base, uint32_t x32base, bool is_x64);
};
